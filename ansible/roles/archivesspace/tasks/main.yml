---
- name: src exists
  stat:
    path: "{{ archivesspace_target }}/archivesspace-{{archivesspace_version}}.zip"
  register: src_exists

- name: Get archivesspace
  get_url: 
    url: "https://github.com/archivesspace/archivesspace/releases/download/{{archivesspace_version}}/archivesspace-{{archivesspace_version}}.zip"
    dest: "{{ archivesspace_target }}"
  when: src_exists.stat.exists == false

- name: check if unzipped yet
  stat:
    path: "{{ archivesspace_home }}"
  register: unzipped

- name: ensure archivesspace home exists
  file:
    path: "{{ archivesspace_home }}"
    state: directory

- name: Unzip AS
  unarchive:
    src: "{{ archivesspace_target}}/archivesspace-{{archivesspace_version}}.zip"
    dest: "{{ archivesspace_home }}"
    copy: no
  when: unzipped.stat.exists == false

- name: register stat for aspace_current
  stat: 
    path: "{{ archivesspace_current }}"
  register: aspace_link

- name: Check if link exists
  stat: 
    path: "{{ archivesspace_current }}"
  register: apace_link_iscorrect
  when: aspace_link.stat.islnk is defined and aspace_link.stat.islnk

#- name: Check if link exists
#  stat: 
#    path: "{{ archivesspace_current }}"
#  register: apace_link_iscorrect
#  when: aspace_link.stat.islnks is defined 

- name: Stop archivesspace before upgrade
  service:
    name: archivesspace
    state: stopped
  when: unzipped.stat.exists == false

# Setup user-defined fields
- include: user-defined-fields.yml

- name: Get mysql connector
  get_url: 
    url: "http://central.maven.org/maven2/mysql/mysql-connector-java/{{ jdbc_version }}/mysql-connector-java-{{ jdbc_version }}.jar"
    dest: "{{ archivesspace_home }}/lib/"

- name: configure connector
  lineinfile:
    state: present
    line: "AppConfig[:db_url] = \"jdbc:mysql://{{ mysql_host }}:3306/archivesspace?user={{ mysql_user }}&password={{ mysql_pass }}&useUnicode=true&characterEncoding=UTF-8\""
    insertafter: EOF
    dest: "{{ archivesspace_home }}/config/config.rb"
    
- name: run db insert script
  command: "sh {{ archivesspace_home }}/scripts/setup-database.sh"

- name: check init script exists
  stat: 
    path: /etc/init.d/archivesspace
  register: init_exists

- name: migrate data
  command: "cp -rL {{ archivesspace_current }}/{{ item }}/ {{ archivesspace_home }}/{{ item }}"
  with_items:
    - data

- name: Remove old symlink
  file:
    path: "{{ archivesspace_current }}"
    state: absent
  when: "aspace_link.stat.islnk is defined and aspace_link.stat.islnk == false or aspace_link.stat.lnk_source != '{{ archivesspace_home }}'"

- name: Ensure symlink exists
  file:
    path: "{{ archivesspace_current }}"
    src: "{{ archivesspace_home }}"
    state: link

- name: setup init script
  file: 
    path: "/etc/init.d/archivesspace"
    src:  "{{ archivesspace_current }}/archivesspace.sh"

- name: ensure runlevel
  command: "update-rc.d archivesspace defaults"

#- name: Ensure that archivesspace is started
#  command: /etc/init.d/archivesspace start

# setup Jasper reporting
- include: jasper.yml

- name: Start the app
  service: 
    name:    archivesspace
    state:   started
    enabled: yes
  environment: 
    JAVA_FONTS: /usr/share/fonts/truetype

- wait_for: 
    port: 8080
    delay: 30

- name: Ensure that backup dir exists
  file:
    state: directory
    path: /backup
