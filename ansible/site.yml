---
- hosts: prod
  become: true
  roles:
    - common
    - ansible-role-apache
    - ansible-role-git
    - ansible-role-mysql
    - ansible-role-java
    - archivesspace
    - ansible-automysqlbackup-role

  vars: # see https://github.com/geerlingguy/ansible-role-apache for apache-specific vars definitions
    apache_create_vhosts: true
    apache_vhosts_filename: "vhosts.conf"
    apache_remove_default_vhost: true
    apache_mods_enabled:
      - proxy.load
      - proxy_http.load
      - ssl.load
    apache_global_settings: |
      DirectoryIndex index.php

    apache_vhosts:
      - servername: "{{ domain }}"
        documentroot: "/var/www/html"
        extra_parameters: |
          Redirect / https://{{ domain }}/

    apache_vhosts_ssl:
      # Additional properties: 'serveradmin, serveralias, extra_parameters'.
      - servername: "{{ domain }}"
        documentroot: "/var/www/html"
        certificate_file: "{{ remote_cert_file_dir }}/{{ cert_file_name }}"
        certificate_key_file: "{{ remote_key_file_dir }}/{{ key_file_name }}"
        certificate_chain_file: "{{ remote_cert_chain_file_dir }}/{{ cert_chain_file_name }}"
        extra_parameters: |
          ProxyPreserveHost On
          ProxyPass / http://localhost:8080/
          ProxyPassReverse / http://localhost:8080/

    remote_cert_file_dir: /etc/ssl/certs
    remote_key_file_dir: /etc/ssl/private
    remote_cert_chain_file_dir: /etc/ssl/certs

  vars_prompt:
    - name: domain
      prompt: domain name for this system
      private: no

    - name: cert_file_name
      prompt: cert file name
      private: no

    - name: local_cert_file_dir
      prompt: local path to cert dir dir
      private: no

    - name: key_file_name
      prompt: private key file name
      private: no

    - name: local_key_file_dir
      prompt: local path to private key dir dir
      private: no

    - name: cert_chain_file_name
      prompt: cert chain/bundle file name
      private: no

    - name: local_cert_chain_file_dir
      prompt: local path to cert chain/bundle dir dir
      private: no

  tasks:
    - hostname: 
        name: "{{ domain }}"

    - name: get pip
      apt:
        name: python-pip

    - name: get aws cli
      pip:
        name: awscli

    - name: cron sync mysql to s3 # requires that ec2 instance is configured with an appropriate IAM role.
      cron:
        name: "s3 sync"
        minute: "{{ automysqlbackup_cron.minute }}"
        hour: "{{ automysqlbackup_cron.hour }}"
        day: "{{ automysqlbackup_cron.day }}"
        month: "{{ automysqlbackup_cron.month }}"
        weekday: "{{ automysqlbackup_cron.weekday }}"
        user: root
        job: "aws s3 sync /var/lib/automysqlbackup/ s3://{{ bucket }}"

    # todo: install postfix as internet site...
    - name: Move cert into place
      copy:
        src: "{{ local_cert_file_dir }}/{{ cert_file_name }}"
        dest: "{{ remote_cert_file_dir }}/{{ cert_file_name }}"
        mode: 0600
        owner: www-data

    - name: Move key into place
      copy:
        src: "{{ local_key_file_dir }}/{{ key_file_name }}"
        dest: "{{ remote_key_file_dir }}/{{ key_file_name }}"
        mode: 0600
        owner: www-data

    - name: Move key into place
      copy:
        src: "{{ local_cert_chain_file_dir }}/{{ cert_chain_file_name }}"
        dest: "{{ remote_cert_chain_file_dir }}/{{ cert_chain_file_name }}"
        mode: 0600
        owner: www-data

    - name: restart apache2
      service:
        name: apache2
        state: restarted
